// src/ui/options/options.js
// –°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å –∂–∏–≤—ã–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º, —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –∏ —Å–±—Ä–æ—Å–æ–º –Ω–∞—Å—Ç—Ä–æ–µ–∫.

// === –≠–õ–ï–ú–ï–ù–¢–´ DOM === //
const saveBtn = document.getElementById('save-btn');
const resetBtn = document.getElementById('reset-btn');
const statusMessage = document.getElementById('status-message');

// –ù–µ–π—Ä–æ-–∏–Ω–∫–ª—é–∑–∏–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
const neuroFeatureSelect = document.getElementById('neuro-feature');

// –í–∏–∑—É–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
const fontSelect = document.getElementById('font-select');
const spacingSlider = document.getElementById('spacing-slider');
const spacingValue = document.getElementById('spacing-value');
const highContrastToggle = document.getElementById('high-contrast-toggle');

// AI –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏
const realtimeProofreaderToggle = document.getElementById('realtime-proofreader-toggle');
const autocompleteToggle = document.getElementById('autocomplete-toggle');

// –≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω–æ–µ
const ocrToggle = document.getElementById('ocr-toggle');

// === –î–ï–§–û–õ–¢–ù–´–ï –ù–ê–°–¢–†–û–ô–ö–ò === //
const DEFAULT_SETTINGS = {
  userPreferences: {
    neuroFeature: 'none',
    realtimeProofreader: false,
    autocompleteOnTab: true
  },
  accessibility: {
    font: 'default',
    spacing: 1.5,
    highContrast: false,
    enableOcr: false
  }
};

// === –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø === //
document.addEventListener('DOMContentLoaded', () => {
  loadOptions();
  setupLiveUpdates();
  console.log('[ChakWrite Options] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
});

// === –ó–ê–ì–†–£–ó–ö–ê –ù–ê–°–¢–†–û–ï–ö === //
function loadOptions() {
  chrome.storage.local.get(['userPreferences', 'accessibility'], (result) => {
    const prefs = result.userPreferences || DEFAULT_SETTINGS.userPreferences;
    const access = result.accessibility || DEFAULT_SETTINGS.accessibility;

    // –ù–µ–π—Ä–æ-–∏–Ω–∫–ª—é–∑–∏–≤–Ω—ã–µ
    neuroFeatureSelect.value = prefs.neuroFeature || 'none';

    // –í–∏–∑—É–∞–ª—å–Ω—ã–µ
    fontSelect.value = access.font || 'default';
    spacingSlider.value = access.spacing || 1.5;
    spacingValue.textContent = spacingSlider.value;
    highContrastToggle.checked = access.highContrast || false;

    // AI –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏
    realtimeProofreaderToggle.checked = prefs.realtimeProofreader || false;
    autocompleteToggle.checked = prefs.autocompleteOnTab !== undefined ? prefs.autocompleteOnTab : true;

    // –≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω–æ–µ
    ocrToggle.checked = access.enableOcr || false;

    console.log('[ChakWrite Options] –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', { prefs, access });
  });
}

// === –°–û–•–†–ê–ù–ï–ù–ò–ï –ù–ê–°–¢–†–û–ï–ö === //
function saveOptions() {
  const userPreferences = {
    neuroFeature: neuroFeatureSelect.value,
    realtimeProofreader: realtimeProofreaderToggle.checked,
    autocompleteOnTab: autocompleteToggle.checked
  };

  const accessibility = {
    font: fontSelect.value,
    spacing: parseFloat(spacingSlider.value),
    highContrast: highContrastToggle.checked,
    enableOcr: ocrToggle.checked
  };

  chrome.storage.local.set(
    { 
      userPreferences,
      accessibility
    },
    () => {
      showStatus('‚úì –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã!', false);
      
      // –£–≤–µ–¥–æ–º–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –≤–∫–ª–∞–¥–∫—É –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –≤–∏–∑—É–∞–ª—å–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫
      chrome.runtime.sendMessage({ 
        action: 'applyVisualChanges', 
        settings: accessibility 
      });

      console.log('[ChakWrite Options] –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã:', { userPreferences, accessibility });
    }
  );
}

// === –°–ë–†–û–° –ö –î–ï–§–û–õ–¢–ù–´–ú === //
function resetOptions() {
  if (!confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫ –∑–Ω–∞—á–µ–Ω–∏—è–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é?')) {
    return;
  }

  chrome.storage.local.set(DEFAULT_SETTINGS, () => {
    loadOptions();
    showStatus('üîÑ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–±—Ä–æ—à–µ–Ω—ã –∫ –∑–Ω–∞—á–µ–Ω–∏—è–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é', false);
    
    // –£–≤–µ–¥–æ–º–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –≤–∫–ª–∞–¥–∫—É
    chrome.runtime.sendMessage({ 
      action: 'applyVisualChanges', 
      settings: DEFAULT_SETTINGS.accessibility 
    });

    console.log('[ChakWrite Options] –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–±—Ä–æ—à–µ–Ω—ã');
  });
}

// === –ñ–ò–í–û–ï –û–ë–ù–û–í–õ–ï–ù–ò–ï === //
function setupLiveUpdates() {
  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è —Å–ª–∞–π–¥–µ—Ä–∞ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
  spacingSlider.addEventListener('input', (e) => {
    spacingValue.textContent = e.target.value;
  });

  // –ñ–∏–≤–æ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –≤–∏–∑—É–∞–ª—å–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π
  const visualElements = [fontSelect, spacingSlider, highContrastToggle];
  
  visualElements.forEach(element => {
    element.addEventListener('change', () => {
      // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏–º–µ–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫ –∞–∫—Ç–∏–≤–Ω–æ–π –≤–∫–ª–∞–¥–∫–µ
      const accessibility = {
        font: fontSelect.value,
        spacing: parseFloat(spacingSlider.value),
        highContrast: highContrastToggle.checked,
        enableOcr: ocrToggle.checked
      };

      chrome.runtime.sendMessage({ 
        action: 'applyVisualChanges', 
        settings: accessibility 
      });

      console.log('[ChakWrite Options] –ñ–∏–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–æ');
    });
  });
}

// === –°–¢–ê–¢–£–° –°–û–û–ë–©–ï–ù–ò–Ø === //
function showStatus(message, isError = false) {
  statusMessage.textContent = message;
  statusMessage.className = `status-message ${isError ? 'error' : ''}`;
  statusMessage.classList.remove('hidden');

  // –ê–≤—Ç–æ—Å–∫—Ä—ã—Ç–∏–µ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
  setTimeout(() => {
    statusMessage.classList.add('hidden');
  }, 3000);
}

// === –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –°–û–ë–´–¢–ò–ô === //
saveBtn.addEventListener('click', saveOptions);
resetBtn.addEventListener('click', resetOptions);

// Ctrl/Cmd + S –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
document.addEventListener('keydown', (e) => {
  if ((e.ctrlKey || e.metaKey) && e.key === 's') {
    e.preventDefault();
    saveOptions();
  }
});

console.log('[ChakWrite Options] –°–∫—Ä–∏–ø—Ç –∑–∞–≥—Ä—É–∂–µ–Ω –∏ –≥–æ—Ç–æ–≤');
